services:
  otuspracticum:
    container_name: otuspracticum_app
    image: ${DOCKER_REGISTRY-}otuspracticum:latest
    build:
      context: .
      dockerfile: OtusPracticum/Dockerfile
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - app-network
    depends_on:
      - postgres_db
    restart: always

  postgres_db:
    container_name: otuspracticum_postgres
    image: postgres:latest
    command: -c 'max_connections=1000'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 8fSnWajO5G
      POSTGRES_DB: otuspracticum
    ports:
      - "5432:5432"
    networks: 
      - app-network
    volumes:
      - ./volumes/pgmaster:/var/lib/postgressql/data
    restart: always

  postgres_slave_first:
    container_name: otuspracticum_postgres_slave_first
    image: postgres:latest
    command: -c 'max_connections=1000'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 8fSnWajO5G
      POSTGRES_DB: otuspracticum
    ports:
      - "5431:5432"
    networks: 
      - app-network
    volumes:
      - ./volumes/pgslave:/var/lib/postgresql/data
    restart: always

  postgres_slave_second:
    container_name: otuspracticum_postgres_slave_second
    image: postgres:latest
    command: -c 'max_connections=1000'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 8fSnWajO5G
      POSTGRES_DB: otuspracticum
    ports:
      - "5430:5432"
    networks: 
      - app-network
    volumes:
      - ./volumes/pgslave_sec:/var/lib/postgresql/data
    restart: always

networks:
  app-network:
    driver: bridge
